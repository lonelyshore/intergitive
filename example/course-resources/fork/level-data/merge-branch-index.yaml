asset_index:
  infile:
# course content
    intro: |+2
      .md
      話說天下大勢，合久必分分久必合  

      我們在上個章節中，建立了各種各樣各形各色的${{t/branch}}  
      而我們曾經強調過  
      ${{t/branch}}的主要功用之一  
      是讓我們可以簡單的嘗試修改一個檔案為多種不同版本  
      如果這些分散在不同${{t/branch}}的修改可以融合回一個版本中集其大成  
      那該有多好呢？  

      沒問題， git 的核心功能之一  
      就是在分頭開發之後又可以把不同${{t/branch}}的結果合而為一  
      這種操作，叫做${{t/branch}}的${{t/merge}}  

      就讓我們繼續以之前提到的作漢堡的例子來操作  
      學習如何把百家爭鳴的狀態給融合吧~  

    open-repo: |+2
      .md
      從這個章節開始，我們將改用新的資料夾來練習操作 git  
      首先，請使用${{t/gui}}開啟位於「`#{{merge-branches}}`」的 git ${{t/repo}}  
      開啟之後，請按下「確認」繼續進行  

    recall-various-branches: |+2
      .md
      在前面的章節中  
      我們曾經使用資料夾中的${{level-data/merge-branch/file-2-name}}來製作不同版本的漢堡  
      從${{level-data/merge-branch/branch-name-hamburger}}出發  
      發展出了三種版本：  
      1. ${{level-data/merge-branch/branch-name-hamburger-alt-1}}：培根漢堡  
      2. ${{level-data/merge-branch/branch-name-hamburger-alt-2}}：萵苣漢堡  
      3. ${{level-data/merge-branch/branch-name-hamburger-alt-3}}：番茄漢堡  

      擅長漢堡的朋友大概已經注意到  
      這三種版本如果融合在一起  
      其實就是經典的 BLT 漢堡  

      沒錯，接下來我們的目標就是要製作出 BLT 漢堡！  
      就讓我們開始吧~

    create-merging-branch: |+2
      .md
      為了投機取巧  
      我們決定從培根漢堡開始製作 BLT 漢堡  
      因此，請在「`${{level-data/merge-branch/branch-name-hamburger-alt-1}}`」的${{t/revision}}上  
      建立名為「`${{level-data/merge-branch/branch-name-merging}}`」的${{t/branch}}，並且切換過去  

      完成之後，請按下「執行」按鈕進行確認  

    confirm-current-content: |+2
      .md
      在開始我們的漢堡融合之前  
      先讓我們確認一下目前手上的漢堡到底有些甚麼料吧  

      請開啟位於「`#{{merge-branches}}`」的「`${{level-data/merge-branch/file-2-name}}`」  
      並回答它的檔案內容是下列何者：  

      <div class="row">
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              1
            </div>
            <div class="card-body text-left font-monospace">
              /------\ 漢堡皮<br>
              ^^^^^^^^ 培根<br>
              \------/ 漢堡皮<br>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              2
            </div>
            <div class="card-body text-left font-monospace">
              /------\ 漢堡皮<br>
              ++ ++ ++ 酸黃瓜<br>
              ######## 漢堡肉<br>
              ^^^^^^^^ 培根<br>
              \------/ 漢堡皮<br>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              3
            </div>
            <div class="card-body text-left font-monospace">
              ^^^^^^^^ 培根<br>
              ######## 漢堡肉<br>
              ^^^^^^^^ 培根<br>
            </div>
          </div>
        </div>
      </div>

      請以數字選項(1/2/3)作答  

    confirm-another-content: |+2
      .md
      確認完培根漢堡的內容物後  
      讓我們來確認一下融合目標的內容吧  

      按照 BLT 漢堡的字母排序  
      我們第一個目標是萵苣漢堡  
      就讓我們來偷看一下在「`${{level-data/merge-branch/branch-name-hamburger-alt-2}}`」這個分支上的「`${{level-data/merge-branch/file-2-name}}`」的內容如何吧  

      為了偷看別的${{t/branch}}的檔案內容  
      我們可以回想前面章節曾經學過的，在${{t/gui}}上操作${{t/file-tree-gui}}介面  
      請仿照下圖(一)操作  

      ![illustration]({{images/recall-view-file-tree}})  
      <div class="img-title">圖(一)</div>  

      先從${{t/graph}}上圖紅框圈選處所示，選擇目標的${{t/revision}}  
      然後如上圖橘框圈選處所示，開啟${{t/file-tree-gui}}介面  

      請檢視「`${{level-data/merge-branch/file-2-name}}`」的內容  
      並回答它的看起來像是下列何者：  

      <div class="row">
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              1
            </div>
            <div class="card-body text-left font-monospace">
              /------\ 漢堡皮<br>
              ******** 黃芥末醬<br>
              ~~~~~~~~ 生菜<br>
              ++ ++ ++ 酸黃瓜<br>
              ######## 漢堡肉<br>
              \------/ 漢堡皮<br>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              2
            </div>
            <div class="card-body text-left font-monospace">
              ~~~~~~~~ 生菜<br>
              ~~~~~~~~ 生菜<br>
              ~~~~~~~~ 生菜<br>
              ~~~~~~~~ 生菜<br>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              3
            </div>
            <div class="card-body text-left font-monospace">
              /------\ 漢堡皮<br>
              ######## 漢堡肉<br>
              ######## 漢堡肉<br>
              ######## 漢堡肉<br>
              ######## 漢堡肉<br>
              \------/ 漢堡皮<br>
            </div>
          </div>
        </div>
      </div>

      請以數字選項(1/2/3)作答 

    instruct-merge-branch-1: |+2
      .md
      正所謂知己知彼百戰百勝  
      現在，我們已經充分了解融合的漢堡兩方的內容物了  
      現在我們已經準備好來進行融合！  

      請按照圖(二)來操作${{t/gui}}  

      ![illustration]({{images/intro-merge-branch-1}})  
      <div class="img-title">圖(二)</div>  

      首先，如圖中紅框圈選範圍所示  
      請在${{t/graph}}上面找到「`${{level-data/merge-branch/branch-name-hamburger-alt-2}}`」所在的${{t/revision}}  
      然後對準它按下滑鼠右鍵，開啟右鍵選單  

      選單開啟後  
      因為我們想要對「`${{level-data/merge-branch/branch-name-hamburger-alt-2}}`」操作  
      所以請在選單中找到如上圖橘框圈選的「`${{level-data/merge-branch/branch-name-hamburger-alt-2}}}`」這個選項  
      請繼續從這個選項展開子選單，然後按照下圖(三)的指引來繼續操作  
      
      ![illustration]({{images/intro-merge-branch-2}})  
      <div class="img-title">圖(三)</div>   

      展開${{t/branch}}子選單之後  
      請在選單上面選擇如上圖紅框圈選所示的「`${{st/merge-into-item-prefix}}'${{level-data/merge-branch/branch-name-merging}}'...`」  
      這個項目的意思是「(${{t/merge}}到${{level-data/merge-branch/branch-name-merging}})」  
      選擇這個項目後，會再出現如下圖(四)的確認對話框  

      ![illustration]({{images/intro-merge-branch-3}})  
      <div class="img-title">圖(四)</div>   

      這個對話框的用途是確認要使用哪種${{t/merge}}方式  
      通常預設的就是最常用的  
      我們不需要修改任何內容，直接按下如上圖紅框圈選的「`${{st/merge-modal-confirm}}`」就可以了  

      操作完成之後，應該就成功地把萵苣漢堡融合進來了  
      請按下「執行」按鈕檢查是否正確  

    confirm-merged-content-1: |+2
      .md
      根據前面的操作，我們認為我們把萵苣漢堡給融合進培根漢堡之中  
      但是融合的結果會是甚麼樣子呢？  
      就讓我們來實際打開資料夾中的「`${{level-data/merge-branch/file-2-name}}`」來看看吧  

      請回答目前檔案內容是下列何者：  

      <div class="row">
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              1
            </div>
            <div class="card-body text-left font-monospace">
              ^^^^^^^^ 培根<br>
              ~~~~~~~~ 生菜<br>
              ^^^^^^^^ 培根<br>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              2
            </div>
            <div class="card-body text-left font-monospace">
              #~#~#~#~ 培生菜根<br>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card">
            <div class="card-header">
              3
            </div>
            <div class="card-body text-left font-monospace">
              /------\ 漢堡皮<br>
              ******** 黃芥末醬<br>
              ~~~~~~~~ 生菜<br>
              ++ ++ ++ 酸黃瓜<br>
              ######## 漢堡肉<br>
              ^^^^^^^^ 培根<br>
              \------/ 漢堡皮<br>
            </div>
          </div>
        </div>
      </div>

      請以數字選項(1/2/3)作答  

    demonstrate-content-merged: |+2
      .md
      從我們前面的問答可以看到  
      在融合之前，我們的兩個漢堡長這樣：  

      <div class="row">
        <div class="col-sm-6">
          <div class="card">
            <div class="card-header">
              培根
            </div>
            <div class="card-body text-left font-monospace">
              /------\ 漢堡皮<br>
              ++ ++ ++ 酸黃瓜<br>
              ######## 漢堡肉<br>
              ^^^^^^^^ 培根<br>
              \------/ 漢堡皮<br>
            </div>
          </div>
        </div>
        <div class="col-sm-6">
          <div class="card">
            <div class="card-header">
              生菜
            </div>
            <div class="card-body text-left font-monospace">
              /------\ 漢堡皮<br>
              ******** 黃芥末醬<br>
              ~~~~~~~~ 生菜<br>
              ++ ++ ++ 酸黃瓜<br>
              ######## 漢堡肉<br>
              \------/ 漢堡皮<br>
            </div>
          </div>
        </div>
      </div>

      融合之後，長這樣：  

      <div class="card w-50">
        <div class="card-header">
          融合漢堡
        </div>
        <div class="card-body text-left font-monospace">
          /------\ 漢堡皮<br>
          ******** 黃芥末醬<br>
          ~~~~~~~~ 生菜<br>
          ++ ++ ++ 酸黃瓜<br>
          ######## 漢堡肉<br>
          ^^^^^^^^ 培根<br>
          \------/ 漢堡皮<br>
        </div>
      </div>


      很明顯的  
      相比於培根漢堡  
      我們現在還多出了「黃芥末醬」還有「生菜」這兩層  
      而相比於萵苣漢堡  
      我們則多出了「培根」  

    introduce-merge: |+2
      .md
      仔細一想會發現，事情其實非常神奇  
      現在我們手中的漢堡，既不是培根漢堡，也不是萵苣漢堡  
      而是融合兩者精髓的全新培根－萵苣漢堡(簡稱 BL 漢堡)  
      也就是說，我們僅只是透過操作 git ，就創造了「漢堡」這個檔案的一個新版本  

      這個新漢堡的誕生，不得不歸功於剛才新介紹的操作：「**${{t/merge-f}}**」<br>
      顧名思義，「${{t/merge}}」的功用就在於融合兩個${{t/branch}}上的檔案  

      當我們想要「${{t/merge}}」的時候，大多時候會牽涉到兩個${{t/branch}}  
      例如我們想要${{t/merge}}「A」和「B」兩個${{t/branch}}  
      我們可以說我們要讓「 A ${{t/merge}} B」，或反過來說就是「把 B 合進 A」(merge B into A)  
      這表示我們會先${{t/checkout-branch}}到「A」  
      然後把「B」給合併到「A」之中  
      
      而實際上它又產生哪些影響呢？就讓我們更加深入的了解一下吧  

    illustrate-merge: |+2
      .md
      當「`${{t/merge}}`」發生的時候，我們可以從${{t/graph}}上觀察到如下圖的變化  

      ![illustration]({{images/illustrate-merged-graph}})  
      <div class="img-title">圖(五)</div>  

      上圖左側是${{t/merge}}發生前的${{t/graph}}  
      右側則是發生後的${{t/graph}}  

      可以看到，${{t/merge}}的效果，是在${{t/graph}}上面創造一個新的${{t/revision}}(上圖右側紅框圈選處)  
      將合併的兩方(上圖左側橘框圈選處)給統合起來  

      也就是說  
      我們操作「${{t/merge}}」之後，git 就自動產生了一個新的${{t/revision}}  
      這樣的${{t/revision}}有一個特別的名字－－「**${{t/merge-commit-f}}**」  

      「${{t/merge-commit}}」之所以特別到會有自己的名字，是因為以下兩點：  
      1. 它是 git 自動產生的，(通常)不用我們花費任何力氣  
      2. 從上圖可以注意到，紅框圈選的「${{t/merge-commit}}」連線往它下方的兩個${{t/revision}}(上圖橘框圈選處)，形成一個類似「Λ」的形狀  
         與之相對，一般的${{t/revision}}，往下方(較舊版本)的連線，只會有一條  

      其中，第二點可以用來作為辨認${{t/merge-commit}}的基準  
      只要當我們在${{t/graph}}上看到「Λ」，就表示這裡有一個${{t/merge-commit}}  
      順帶一提，這也代表${{t/merge-commit}}擁有兩個${{t/parent-commit}}  

    where-is-head: |+2
      .md
      在 git 的操作中，隨時確認自己目前的${{t/head}}身在何方是最重要的  
      在${{t/merge}}發生之後，${{t/head}}會有甚麼改變呢？  
      讓我們操作${{t/gui}}  
      觀察並且回答目前的${{t/head}}是下列何者吧  

      1. ${{level-data/merge-branch/branch-name-merging}}
      2. hamburg
      2. frankfurt

      請以數字選項(1/2/3)作答  

    explain-head-unchanged: |+2
      .md
      根據上面的觀察我們不難發現  
      「${{t/merge}}」的前後，我們的「${{t/head}}」指向的${{t/branch}}保持不變  
      都是「`${{level-data/merge-branch/branch-name-merging}}`」  
      也就是說，在「A ${{t/merge}} B」的過程中  
      「${{t/head}}」會保持指向「A」  

      根據我們之前所學  
      我們知道「${{t/head}}」指向的「${{t/branch}}」會跟著新生成的${{t/revision}}走  
      所以不意外的，「`${{level-data/merge-branch/branch-name-merging}}`」在${{t/merge}}之後  
      會指向新生成的「`${{t/merge-commit}}`」  

      說到這裡，那「被合併」的${{t/branch}}下場又如何呢？  
      不如讓我們來再繼續${{t/merge}}，然後觀察看看吧  

    observe-merged-branch-location: |+2
      .md
      讓我們繼續以「`${{level-data/merge-branch/branch-name-merging}}`」為基底，融合其它的漢堡類型吧  
      目前我們的 BLT 漢堡，還剩下番茄這個要素了  
      所以，我們的目標理所當然的就是「`${{level-data/merge-branch/branch-name-hamburger-alt-3}}`」  

      在繼續進行之前，別忘了我們的目標是要觀察「被合併」${{t/branch}}的位置會如何移動  
      所以就先讓我們觀察一下${{t/graph}}上的「`${{level-data/merge-branch/branch-name-hamburger-alt-3}}`」  
      請問它目前所指向的${{t/revision}}的${{t/commit-msg}}內容為下列何者呢？  

      1. 番茄紅了，醫生的臉就綠了  
      2. 一天一蘋果，醫生遠離我  
      3. ${{level-data/merge-branch/file-2-commit-alt-3}}  

      請以數字選項(1/2/3)作答  

    instruct-merge-again: |+2
      .md
      現在，請按照剛才所教的「${{t/merge}}」操作  
      先切換到「`${{level-data/merge-branch/branch-name-merging}}`」  
      然後把「`${{level-data/merge-branch/branch-name-hamburger-alt-3}}`」給${{t/merge}}進來  

      完成之後，請按下「執行」按鈕，進行確認  

    observe-merged-branch-location-again: |+2
      .md
      現在，我們完成了${{t/merge}}操作  
      讓我們再次觀察${{t/graph}}上的「`${{level-data/merge-branch/branch-name-hamburger-alt-3}}`」  
      請問它目前所指向的${{t/revision}}的${{t/commit-msg}}內容為下列何者呢？  

      1. Merge branch '${{level-data/merge-branch/branch-name-hamburger-alt-2}}' into ${{level-data/merge-branch/branch-name-merging}}  
      2. Merge branch '${{level-data/merge-branch/branch-name-hamburger-alt-3}}' into ${{level-data/merge-branch/branch-name-merging}}  
      3. ${{level-data/merge-branch/file-2-commit-alt-3}}  

      請以數字選項(1/2/3)作答  

    reassure-merged-branch-unmoved: |+2
      .md
      觀察上面${{t/merge}}前後我們對被合併${{t/branch}}的位置回答  
      我們不難發現，被合併的${{t/branch}}(A ${{t/merge}} B 中的「B」方)  
      **它的位置不會改變**  
      與之相對，合併主動方  
      則會移動到新產生的${{t/merge-commit}}上  
      可以說主動的一方把${{t/merge}}的成果給拿走了  

    merge-process: |+2
      .md
      統整一下目前所知的情報  
      假設我們想要進行「A ${{t/merge}} B」  
      整個事情發生的過程，大致上可以用下面的圖示展示：  

      ![illustration]({{images/illustrate-merge-branch-process}})  
      <div class="img-title">圖(六)</div>  

      在上圖中呈現了三個步驟：  
      1. 切換到想要${{t/merge}}的兩個分支中的一個，在這裡是「A」  
         而另一個想要${{t/merge}}的分支則是「B」  
      2. 開始${{t/merge}}。 git 自動融合「A」和「B」當前的內容  
         產生「${{t/merge-commit}}」
      3. 「A」的位置被移動到新產生的「${{t/merge-commit}}」  
         也就是說，「A」指向的檔案內容變成${{t/merge}}後的結果  

    summary: |+2
      .md
      在這個章節中  
      我們介紹了如何把散落在不同${{t/branch}}上面的修改給融合起來  
      能夠做到這件事情的操作，叫做「**${{t/merge}}**」  

      除此之外，我們還詳述了${{t/merge}}的特徵，以及帶來的效果，他們包含：  
      1. 它會結合兩個${{t/revision}}上的內容，自動產生一個新的${{t/revision}}，又叫做「${{t/merge-commit}}」  
      2. 「${{t/merge-commit}}」的特色是有兩個網下的連線，也就是說，它有兩個${{t/parent-commit}}  
      3. ${{t/merge}}的主動方會更新位置到${{t/merge-commit}}上，被動方則不會變動  

    merge-combine-file-tree: |+2
      .md
      從前面的練習中
      事實上，這表示「${{t/merge}}」不只融合了檔案  
      它其實融合了兩個「`${{t/file-tree}}`」  
      在前面的章節我們曾經提過  
      git 裡面每一個${{t/revision}}，都保存了當時的整個資料夾目錄的內容，也就是「${{t/file-tree}}」  
      
      


      除了融合檔案外，它還會產生一些額外的效果不得不注意  
      就讓我們來仔細觀察一下吧  


# repo
    file-2-name: "漢堡.txt"
    file-2-path: "merge-branches/漢堡.txt"
    file-3-name: "配餐.txt"
    file-3-path: "merge-branches/配餐.txt"

    file-1:v1: "file-1:v1"
    file-1:v2: "file-1:v2"
    file-1:v3: "file-1:v3"

    
    file-2:v1: |+2
      /------\ 漢堡皮
      ++ ++ ++ 酸黃瓜
      ######## 漢堡肉
      \------/ 漢堡皮
    file-2:alt-1: |+2
      /------\ 漢堡皮
      ++ ++ ++ 酸黃瓜
      ######## 漢堡肉
      ^^^^^^^^ 培根
      \------/ 漢堡皮
    file-2:alt-2:v1: |+2
      /------\ 漢堡皮
      ~~~~~~~~ 生菜
      ++ ++ ++ 酸黃瓜
      ######## 漢堡肉
      \------/ 漢堡皮
    file-2:alt-2:v2: |+2
      /------\ 漢堡皮
      ******** 黃芥末醬
      ~~~~~~~~ 生菜
      ++ ++ ++ 酸黃瓜
      ######## 漢堡肉
      \------/ 漢堡皮
    file-2:alt-3: |+2
      /------\ 漢堡皮
      ++ ++ ++ 酸黃瓜
      :==::==: 番茄
      ######## 漢堡肉
      \------/ 漢堡皮
    file-2:del-1: |+2
      /------\ 漢堡皮
      ++ ++ ++ 酸黃瓜
      ???????? 鳳梨
      ######## 漢堡肉
      \------/ 漢堡皮
    file-2:del-2:v1: |+2
      /------\ 漢堡皮
      ++ ++ ++ 酸黃瓜
      ######## 漢堡肉
      @@@@@@@@ 第二層漢堡肉
      \------/ 漢堡皮
    file-2:del-2:v2: |+2
      ........ 芝麻
      /------\ 漢堡皮
      ++ ++ ++ 酸黃瓜
      ######## 漢堡肉
      @@@@@@@@ 第二層漢堡肉
      \------/ 漢堡皮
    file-2:del-2:v3: |+2
      ........ 芝麻
      /------\ 漢堡皮
      ++ ++ ++ 酸黃瓜
      ======== 起司
      ######## 漢堡肉
      @@@@@@@@ 第二層漢堡肉
      \------/ 漢堡皮
    file-2:del-3: |+2
      /------\ 麵包
      ######## 肉
      \------/ 麵包
    file-3:alt-1: |+2
      |||||||| 炸薯條
    file-2-commit-hamburger: "加入漢堡"
    file-2-commit-alt-1: "加上培根"
    file-2-commit-alt-2:v1: "加上生菜"
    file-2-commit-alt-2:v2: "加上黃芥末醬"
    file-2-commit-alt-3: "加上番茄"
    file-2-commit-del-1: "加上鳳梨"
    file-2-commit-del-2:v1: "加上第二層漢堡肉"
    file-2-commit-del-2:v2: "加上芝麻"
    file-2-commit-del-2:v3: "加上起司"
    file-2-commit-del-3: "返璞歸真"
    file-3-commit: "炸薯條"

    branch-name-hamburger: "hamburger"
    branch-name-hamburger-alt-1: "hamburger+becon"
    branch-name-hamburger-alt-2: "hamburger+letuce"
    branch-name-hamburger-alt-3: "hamburger+tomato"
    branch-name-hamburger-del-1: "hamburger+pineapple"
    branch-name-hamburger-del-2: "giant-hamburger"
    branch-name-hamburger-del-3:v1: "simple-hamburger"
    branch-name-hamburger-del-3:v2: "sandwich"
    branch-name-sidedish-alt-1: "side-dish-fries"
    branch-name-no-hamburger: "no-hamburger"
    branch-name-ancestor: "is-ancestor-1"
    branch-name-not-ancestor: "is-ancestor-2"
    branch-name-merging: "BLT-burger"